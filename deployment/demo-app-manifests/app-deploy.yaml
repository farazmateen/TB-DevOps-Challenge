apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  namespace: my-app
  labels:
    app: my-app
spec:
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: demo-app
      imagePullSecrets:
      - name: dockerconfigjson-github-com
      containers:
      - name: my-app-container
        image: ghcr.io/farazmateen/tb-do-image:latest
        ports:
        - containerPort: 8000
        resources:
          requests:
            memory: "256Mi"   
            cpu: "100m"      
          limits:
            memory: "512Mi"  
            cpu: "200m"     
        env:
          - name: ENVIRONMENT
            valueFrom:
              configMapKeyRef:
                name: my-app-config
                key: ENVIRONMENT
          - name: HOST
            valueFrom:
              configMapKeyRef:
                name: my-app-config
                key: HOST
          - name: PORT
            valueFrom:
              configMapKeyRef:
                name: my-app-config
                key: PORT
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                name: my-app-config
                key: REDIS_HOST
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                name: my-app-config
                key: REDIS_PORT
          - name: REDIS_DB
            valueFrom:
              configMapKeyRef:
                name: my-app-config
                key: REDIS_DB
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
